#BeginSection(header)
	/* this file was originately generated as export from old parser, then later completed with manual additions to form DESSBAS (DD=Deutsch SS=Stolze-Schrey BAS=Grundschrift) */
	//
	// Die Grundschrift Stolze-Schrey soll nun nach folgenden Prinzipien neu designt werden:
	// 
	// Zeichen:
	// Prinzipiell sollen schönere Zeichen gestaltet werden. Dies wird erreicht durch:
	// - bessere Platzierung der Zeichenknoten (Verwendung von VPAINT wo möglich, der Rest wird nach wie vor handeditiert)
	// - Korrektur der Spannungen (geradere Modellierung von Zeichen-Rücken, schönere Anfangs- und Endbögen)
	// - bessere Zeichenabstände in Engschreibung: Zeichen werden neu als "Rohzeichen" modelliert, d.h. nur mit width (offset 0) ohne additional width before/after (offsets 4 + 5).
	//   Die Regeln werden um einen "spacer" ergänzt, der individuelle Abstände zwischen den Zeichen einfügt.
	//
	// Technisch sollen folgende Prinzipien eingehalten werden:
	// - es soll nur die SE1 rev0 genutzt werden (also keine parallelen Rotationsachsen und keine proportionalen/orthogonalen Punkte), dies um sicherzustellen, dass die Definitionen 100% mit der
	//   SE1 kompatibel sind)
	// - die Zeichen werden für eine Neigung von 60 Grad optimiert (dies damit die Knoten trotz horizontaler Schiebung möglichst optimal platziert werden)
	//
	// Wenn nötig (d.h. wenn damit keine schönen Zeichen generiert werden können) soll auf spezielle Funktionen der SE1, die darauf ausgerichtet waren, den Editionsaufwand und die Datenmengen 
	// zu reduzieren, verzichtet werden:
	// - auf late entry und early exit knots wird verzichtet => stattdessen wird für jede Variante ein eigenes Zeichen definiert
	// - auf token combiner und shifter wird verzichtet => stattdessen wird für jede Variante ein eigenes Zeichen definiert
	// - eventuell sollen die Zeichen auch um neue Knoten erweitert werden, um eine feinere Ausgestaltung zu erreichen (z.B. bei der Schattierung), allerdings soll dies vorsichtig gehandhabt
	//   werden, da es allenfalls Sinn macht, Optimierung der Schattierung später automatisch vorzunehmen (ähnlich wie bei der geplanten SE2)
	//
	// Regeln:
	// - es soll konsequent darauf geachtet werden, mit der STD-Form einen Kompatibilitätspunkt im Parsprozess zu generieren
	// - da mehr Zeichen definiert werden, soll konsequent darauf geachtet werden, dass die Bezeichnungen der Tokens einer einheitlichen Schreibweise folgen (diese soll im Font und innerhalb
	//   der Regeln verwendet werden)
	// - Reste aus dem alten "Trickster" sollen entfernt werden
	// - generelles Ausmisten und Ausräumen der Regeln
	/  - es wird ein Spacer ergänzt, der individuelle Abstände zwischen Zeichen (in Abhängikeit auch von Hoch-/Tiefstellung etc. einfügen kann)
	//
	// Schreibweise:
	// = ein Zeichen am Wortanfang (z.B. [F=]) oder Wortende (z.B. [=NG])
	// ^ ein höher gestelltes Zeichen (z.B. [^CH]) oder Variante vor höhergestelltem Zeichen (z.B. [AR5^])
	// _ ein tiefer gestelltes Zeichen (z.B. [_N])
	// @ ein Verbundzeichen (z.B. [@L] oder [@R], die mit anderen Zeichen verbunden werden)
	// 0..9 bei runden Zeichen: Anknüpfpunkt (z.B. [@R6] = Zeichen R mit Anknüpfpunkt bei 6 Uhr, also im Fusspunkt)
	// # technische Zeichen (z.B. [#WS] = wide shadowed, eine weite, schattierte Verbindung, also ä im System Stolze-Schrey; [#5] = spacer mit Abstand 5px)
	// +- Gross- oder Kleinschreibung bei Blockschriftzeichen (z.B. [A+] = grosses A, [A-] = kleines A)
	// & geschriebene Vokale oder Häkchen (z.B. [&I] oder [&E])
        // -1 bei Aufstrich-t: wie viel tiefer weitergeschrieben wird (z.B. [&T-1] in Verbindung mit [B])
	#BeginSubSection(session)
		"prefixes_list" := "ge, zu, un, be, bei, ein, um, ver, mit, ent, auf, ab, an, er, vor, wie?-?der, durch, ein, der, des, dem, her, ge-?gen, hin, zer, recht, sam-?men, un-?ter, aus, rück, da, nach, zwi-?schen, hin-?ten, hin-?ter, weg, ü-?ber, miss, dar, wei-?ter, los, lang, so, lieb, schief, scharf, statt, tief, wahr, weich, weis, wett, wohl, zwangs, fehl, fest, frei, gleich, kalt, kund, kurz, gut, nie-?der";
		"stems_list" := "gangen, fähr";
		"suffixes_list" := "[kh]ei-?t(?:s|en)?, li-?ch(?:(?:e-?r)(?:e[srn]?)?)?, nis(?:sen?)?, w(?:ie|o|ann|as|e[rnm]), los(?:(?:es)?e[snmr]?)?, bar(?:(?:st)?e[rnsm]?)?, sam(?:(?:st)e[rsnm]?)?, hin, her, so"; // use non caputuring groups! (?:)
		//"title_text" := "new prefixes";
	#EndSubSection(session)
	#BeginSubSection(analyzer)
		"\+de$" => "-de";
		"([WwNn])ie\|der" => "$1ie-der";
		"\+lie-g" => "|lie-g"; // daniederliegen
		"([Ss])ie\|ben" => "$1ie-ben";
		"zäh\|lun-gen$" => "zäh-lun-gen";
		"([Mm])it\|tag" => "$1it-tag";
		"([Vv])iel\|leicht" => "$1iel-leicht";
		"^([Pp])ro\|" => "$1ro-";
		"e\|ren$" => "e-ren";	// näheren
		"(\+|\|)ge(-?)n(e[nrs]?)?$" => "-ge$2n$3";
		"\|([kh])ei\|t(.?.?)$" => "=$1ei-t$2"; 
		"^[Ee]r(\|)" => "{ER}"; // prefix or infix er
		"(\|)er(\|)" => "{ER}"; // infix er
		"[Aa]n\+?de(-|\|)?r(en?)?" => "an-de$1r$2";

		// mark prefixes that have not been recognized
		"^([Vv])er-ant-" => "$1er+ant+";
		"\|ver-ant-" => "|ver+ant+";

	#EndSubSection(analyzer)
#EndSection(header)
